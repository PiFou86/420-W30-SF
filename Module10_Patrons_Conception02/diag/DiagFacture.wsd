@startuml DiagAppFactureNonGen

skinparam classAttributeIconSize 0
skinparam class {
    BackgroundColor White
    BorderColor #000
}

interface IDisposable {
    + Dispose()
}

interface IObservable<TypeEvenement> {
    + Subscribe(p_observateur : IObserver<TypeEvenement>) : IDisposable
}

interface IObserver<TypeEvenement> {
    + OnCompleted()
    + OnError(p_exception : Exception)
    + OnNext(p_valeur : TypeEvenement)
}

class FactureModel {
    - m_lignesFactureModel : List<LigneFactureModel>
    - m_observateurs : List<IObserver<FactureModelEvent>>
    + Total : decimal <<get>>
    + ctor()
    + Subscribe(p_observateur : IObserver<FactureModelEvent>) : IDisposable
    + AjouterLigneFactureModel(p_ligneFactureModel : LigneFactureModel)
    + Nouvelle()
}

class fEcranPrincipal {
    - m_factureModel : FactureModel
    - m_ecranClient : fEcranClient
    + ctor()
    ...()
}

class fEcranClient {
    + ctor(p_factureModel : FactureModel)
    ...()
}

class ObservateurEcranCaissier {
    - m_seDesabonner : IDisposable
    - m_dgvFactureModel : DataGridView
    - m_total : TextBox
    + ctor(p_sujet : IObservable<FactureModelEvent>, p_dgvFactureModel : DataGridView, p_total : TextBox)
    + OnCompleted()
    + OnError(p_exception : Exception)
    + OnNext(p_valeur : FactureModelEvent)
    + SeDesabonner()
}

class ObservateurEcranClient {
    - m_seDesabonner : IDisposable
    - m_affichage : TextBox
    + ctor(p_sujet : IObservable<FactureModelEvent>, p_affichage : TextBox)
    + OnCompleted()
    + OnError(p_exception : Exception)
    + OnNext(p_valeur : FactureModelEvent)
    + SeDesabonner()
}

class UnsubscriberFactureModel {
    - m_observer : IObserver<FactureModelEvent>
    - m_observers : List<IObserver<FactureModelEvent>>
    + UnsubscribeSujetObservable(p_observers : List<IObserver<FactureModelEvent>>, p_observer : IObserver<FactureModelEvent>)
    + Dispose()
}

class FactureModelEvent {
    + Type : FactureModelEventType <<get>> <<set>>
    + LigneFactureModel : LigneFactureModel <<get>> <<set>>
    + FactureModel : FactureModel <<get>> <<set>>
}

enum FactureModelEventType {
    AJOUT_LIGNE,
    NOUVELLE
}

FactureModelEvent "n" --> "1" FactureModel
FactureModelEvent "n" --> "1" LigneFactureModel
FactureModelEvent "n" --> "1" FactureModelEventType

fEcranPrincipal "1" -right-> "1" FactureModel : <<create>>
fEcranPrincipal "1" -left-> "1" fEcranClient : \t


FactureModel "1" -left-> "n" IObserver : \t
FactureModel "1" -right-> "n" LigneFactureModel

IObserver <|.. ObservateurEcranCaissier
IObserver <|.. ObservateurEcranClient
IDisposable <|.. UnsubscriberFactureModel
IObserver <.. UnsubscriberFactureModel
IObservable <|.. FactureModel

'fEcranClient "1" ..> "1" ObservateurEcranClient : <<create>>
'fEcranPrincipal "1" ..> "1" ObservateurEcranCaissier : <<create>>
@enduml
